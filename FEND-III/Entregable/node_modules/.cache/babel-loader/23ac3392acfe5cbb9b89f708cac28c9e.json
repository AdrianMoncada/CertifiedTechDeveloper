{"ast":null,"code":"var _jsxFileName = \"/home/adrianmoncada/CertifiedTechDeveloper/FEND-III/entregable-frontend-3-junio22/src/components/Item.js\",\n    _s = $RefreshSig$();\n\n// El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo. *DONE*\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App. *DONE*\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso. *DONE*\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Item = _ref => {\n  _s();\n\n  let {\n    itemData,\n    method\n  } = _ref;\n  const [count, setCount] = useState(itemData.stock);\n  const [isDisabled, setDisabled] = useState(false);\n\n  function substract() {\n    if (count >= 1) {\n      setCount(count - 1);\n    }\n  }\n\n  let button;\n\n  if (count > 0) {\n    button = /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        substract();\n        method();\n      },\n      children: \"COMPRAR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }, this);\n  } else {\n    // button = <buttton disabled=\"true\">SIN STOCK</buttton>\n    button = /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        substract();\n        method();\n      },\n      children: \"SIN STOCK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }, this); // button = <buttton disabled=\"true\">SIN STOCK</buttton>\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    id: itemData.id,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: itemData.producto.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: itemData.producto.descripcion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"En stock: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), button]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Item, \"NSLW/i7Y7BUM0TehbjXqtjGhQ6o=\");\n\n_c = Item;\nexport default Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["React","useState","Item","itemData","method","count","setCount","stock","isDisabled","setDisabled","substract","button","id","producto","nombre","descripcion"],"sources":["/home/adrianmoncada/CertifiedTechDeveloper/FEND-III/entregable-frontend-3-junio22/src/components/Item.js"],"sourcesContent":["\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo. *DONE*\r\n\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App. *DONE*\r\n\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso. *DONE*\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst Item = ({ itemData, method })=>{\r\n  const [count, setCount] = useState(itemData.stock);\r\n  const [isDisabled, setDisabled] = useState(false);\r\n\r\n  function substract() {\r\n    if(count >= 1){\r\n      setCount(count -1);\r\n    }\r\n    \r\n  }\r\n\r\n  let button;\r\n  if (count > 0 ){\r\n    button = <button onClick={() => { substract(); method(); }}>COMPRAR</button>\r\n  } else {\r\n    // button = <buttton disabled=\"true\">SIN STOCK</buttton>\r\n    button = <button onClick={() => { substract(); method(); }}>SIN STOCK</button>\r\n    // button = <buttton disabled=\"true\">SIN STOCK</buttton>\r\n  }\r\n\r\n  return (\r\n    <div className='producto' id={itemData.id}>\r\n      <h3>{itemData.producto.nombre}</h3>\r\n      <p>{itemData.producto.descripcion}</p>\r\n      <h5>En stock: <span>{count}</span></h5>\r\n      {/* <button disabled={isDisabled} onClick={() => { substract(); method(); }}>COMPRAR</button> */}\r\n      {button}\r\n      {/* <button disabled={count === 0?\"true\":\"\"} onClick={() => { substract(); method(); }}>COMPRAR</button> */}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Item;"],"mappings":";;;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,IAAI,GAAG,QAAwB;EAAA;;EAAA,IAAvB;IAAEC,QAAF;IAAYC;EAAZ,CAAuB;EACnC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACE,QAAQ,CAACI,KAAV,CAAlC;EACA,MAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;;EAEA,SAASS,SAAT,GAAqB;IACnB,IAAGL,KAAK,IAAI,CAAZ,EAAc;MACZC,QAAQ,CAACD,KAAK,GAAE,CAAR,CAAR;IACD;EAEF;;EAED,IAAIM,MAAJ;;EACA,IAAIN,KAAK,GAAG,CAAZ,EAAe;IACbM,MAAM,gBAAG;MAAQ,OAAO,EAAE,MAAM;QAAED,SAAS;QAAIN,MAAM;MAAK,CAAjD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAT;EACD,CAFD,MAEO;IACL;IACAO,MAAM,gBAAG;MAAQ,OAAO,EAAE,MAAM;QAAED,SAAS;QAAIN,MAAM;MAAK,CAAjD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAT,CAFK,CAGL;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,UAAf;IAA0B,EAAE,EAAED,QAAQ,CAACS,EAAvC;IAAA,wBACE;MAAA,UAAKT,QAAQ,CAACU,QAAT,CAAkBC;IAAvB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAIX,QAAQ,CAACU,QAAT,CAAkBE;IAAtB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,sCAAc;QAAA,UAAOV;MAAP;QAAA;QAAA;QAAA;MAAA,QAAd;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,EAKGM,MALH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CA/BD;;GAAMT,I;;KAAAA,I;AAiCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}